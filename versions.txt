PayPalHere SDK Releases
These are the version numbers of the PayPalHere SDK and
what is new in this release.

1.0
 What's new:
 - Logging to CAL (PayPal's live issue monitoring/alerting system).  Allows PayPal to discover
immediately if something is going wrong in the SDK instances.

1.2
 What's new:
   PPHTransactionMananger APIs added.  Provides a stateful API for processing payment.

1.3
 What's new:
   - Incorporate partner feedback re PPHTransactionManager signature related methods.
   - Fix a few bugs in the live issue monitoring/alerting system.  Add more error detail

1.3.1
 What's new:
  - Periodic device battery level sampling.
  - New features around invoice fees.
  - Fixes a bug in the issue monitoring system.
  - Fixes a bug related to sending of receipts.
  - Internal thinning of network requests by removing unneeded headers.
  - Fixes a bug in merchant location management.  When you save a new PPHLocation
    the locationId of that object will now become updated with the new value.
  - More descriptive developer facing error messages for some PPHTransactionManager operations.
  - Fixes a bug in discount rounding.
  - PPHLocation object can now specify a gratuityType.

1.3.2
 What's new:
  - Fix a bug in the no-hw version of the SDK when taking key-in payment and you
    happen to have a doc port swiper plugged in.

1.3.3
 What’s new:
  - Fix a bug when dealing with declined cards.
  - New API in PPHLocation allowing you to delete a location from the service.
  - Fix bug where currencies with 1 decimal place were sometimes formatted with 2 decimal places.
  - Added better handling of discounts with zero value.
  - Rounding fix for items with discounts.
  - Fixed defect where once stopping location monitoring it could never be restarted.
  - Support for auth/capture/void in payment processor and a fix to refund response handling for session tokens.

1.3.4
 What's new:
  - Better sandbox support.  The SDK and the SDKSampleApp now more fully support PayPal's SandBox.
  - Better retry handling in TakePayment scenarios.

1.3.5
 What's new:
  - Fixing bug in TransactionManager state machine and currentInvoice object. Now you can
    repay the currentInvoice object in case you made mistakes like entering in the wrong card number.
  - Improved Transaction Manager local error handling in use cases such as not having an active merchant set
    or having a nil invoice object.
  - Added internal header file for PPHInvoice to allow SDK to set the read-only currency attribute without having
    to re-invoke constructor.
  - Added more functional and unit tests to TransactionManager to reinforce these changes.

1.3.6
 What's new:
  - CardType property is available through PPHCardSwipeData. This now allows you to determine the card brand such as
    VISA, MASTER, AMEX etc when a card is swiped.
  - PPHAccountStatus enum has more fine grained description of Merchant account’s status such as whether merchant is
    eligible, ineligible, restricted etc.
  - Updates to Sample App to showcase more use cases.
  - A bug in the way the app’s version info was getting logged has now been fixed.
  - Various bug fixes in the state machine for the TransactionManager.
  - String localization for the error messages from backend.
  - Added more unit and functional tests to the SDK tests.

1.3.7
 What's new:
 - A hotfix for the earlier 1.3.6 release. Adding the missing architecture : i386

1.3.8
 What's new:
 - A hotfix for the earlier 1.3.7 release. Ensuring the SDK links correctly for partners using the -ObjC other linker flag.

1.3.9
 What's new:
 - A hotfix for the earlier 1.3.8 release.  Fixes a crash related to checked in clients who specify a tip.

1.4.0
 What's new:

 -Auth and Capture implementation.

 Following bug fixes and optimizations are included in this release:
 [SDKLogging] Fix missing correlationIds in CAL logs with PPH app.
 [Auth and Capture] Adding a new property "AuthorizationId" within the transaction record.
 [Bug Fix] catching and returning a valid error when the provided signature is nil.
 [PP LOG] Improper formatting usage when invoking PP_LOG calls.
 [SDKTESTING] Test SDK against checkin tips with bad percentage JSON
 [Bug Fix] Show the active merchant's 'terms' on printed receipts.
 [Location] Location authorization fixes for iOS 8.
 [Bug Fix] fixed parsing of PPHPaymentResponse incorrectly checking for NSNull.
 [SDKBugFix] Fixed bug related to providing signature from within the completion block.
 [receipts] unified item rounded total and using that in receipts
 [XCode Fixes] Fix NSData declared as NSMutableData that causes build error in XCode 6.
 [XCode Fixes] Remove unnecessary 'description' property definition that causes build error in XCode 6.
 [Bug Fix] Fix a crash in the SDK re checked in clients with tip.
 finalizePaymentForTransaction in PPHTransactionManager.h is now fully deprecated. This has instead been replaced by provideSignature API in the same class
 Here And There Sample app is now deprecated as well. All of this functionality and more is now demonstrated in the SDKSampleApp

 1.4.1
  What's new:

  Chip and Pin payments API is now available.
  Bug fix to PPHError; in some cases empty error messages were bubbled up. This has been fixed
  Bug fix in the SDK for better instrumentation and better error reporting
  Fixed a bug related to min/max payments limits
  iOS 8 + iPhone 6 caused some issues with Magtek swiper functionality. This update has some fixes

1.4.2
  What's new:

  Updating the Roam library SDK to 4.7.2.
  Add armv7s to the architectures list because xcode 6 does not have it by default.
  Adding the ability to download the invoice based off an invoiceId.
  Adding another constructor/initter in the PPHTransactionRecord that would allow us to construct a transaction record by providing a transactionId and an Invoice. This would aid in the auth and capture use case.

1.4.3
  What's new:
  - Adding two new init APIs in PPHAmount.
  - All the sample apps are now pointing to one and the same instance of the mid-tier server.
  - [BUG FIX] EMV sample app can now perform AU EMV transactions.
  - [BUG FIX] UK and AU merchants can now perform Key-In based transactions.
  - Improved EMV SDK UI for payment flows.

1.4.4
Bug fix: Fixing the AU country code check, that was wrongly setting the available payment options to "chip" for non AU merchants and was throwing the -2016 error.

1.4.5
  What’s new:
  - Fully compliant with arm64 requirements as specified by Apple.
  - Contains additional logging and instrumentation for better error reporting
  - Updated the Magtek swiper library to version 120.01.
  - A bug fix inside the PPHCardReaderManager class that was causing some swipes to be considered as failed swipes
  - Bug fixes to the UI flow for EMV (Chip & PIN cases)
  - Some changes to the Invoicing code and return values to handle bad input values better. Please refer to documentation for more details
  - Fixed an issue in the TransactionManager state machine related to not being able to process new transaction when the transaction manager was waiting for signature
  - Fixed a bug related to sending receipts in the Chip & PIN workflow

1.4.6
  What's new:
  - Updated to include the armv7s symbols for PPH SDK

1.4.7
  What's new:
  - Fixed a bug related to not being able to invoice items with negative unit price

1.4.8
  What's new:
  - Fix missing Magtek swiper symbols.  

1.4.9
  What's new:
  - Fixed a bug that caused the SDK to stall/lock up during initial connection with a chip and pin reader
  - Fixed an issue related to being able to retry a PIN after incorrect entry (chip and pin flow)
  - Fixed a UI bug that caused the screen to be incorrect when in landscape mode
  - Introduced additional instrumentation to track an issue related to bad requests being formed during certain flows

1.5.0
  What's new:
  - [EMV flow] Fixed a bug where the alert view never goes away when a transaction is canceled before card is inserted
  - [EMV flow] Making sure error messages bubble all the way up to the app when failures are encountered during payment
  - [EMV flow] Added a didRequestPrintReceipt flag to indicate whether flow was completed with a request to print receipts.
    The SDK does not support receipt printing - it is up to the application to determine how to handle the request.

1.5.1
  What's new:
  - [EMV Flow] Fixed a bug related to how we handle broken chip cards or when chip is not readable and user resorts to using swipe
  - [EMV Flow] Fixed a bug related to a specific payment declined message that was not parsed correctly by the SDK

1.5.2
  What's new:
  - [EMV Flow] Updated the SDK behavior when the processPaymentWithSDKUI is invoked before a chip & pin reader is connected over bluetooth. The transaction manager will now throw an error kPPHLocalErrorBadConfigurationNoEMVReaderConnected if a reader is not connected

1.6
  What's new:
  - All new payments APIs to implemenet accreditation compliant EMV payments.
  - Many APIs and constants renamed to be more consistent and accurate.
  - Support for new contactless M010 EMV readers.
  - Please see migration document in the docs folder for more information.

1.6.1
  What's new:
  - Fixed resource plist issue blocking app submission.
  - Writeable invoice merchant reference number.
  - `clearActiveMerchant` API to clear saved internal tokens and merchant info.

1.6.2
  What's new:
  - Fixed parsing of payment information when downloading a paid invoice.
  - Exposed PPHSDKSignatureViewController to enable partners to show the same signature screen outside of a UI flow.
  - Displaying receipt UI for a voided transaction should now have text that indicates the transaction was unsuccessful.
  - Capturing payment for an authorized invoice will return a TransactionRecord with the transactionID correctly populated.

1.6.3
  What's new:
  - Fix payment information parsing on partially refunded invoices.
  - Added PPHTransactionManager APIs to prompt for gratuity on card readers with displays and number pads.

1.6.4
  What's new:
  - Add readerSleepDelay setting to PPHTransactionManager to control the amount of time to wait outside of a transaction before putting EMV readers to sleep.

1.6.6
  What’s new:
  - Fixed parsing of certain card types.
  - Fixed the dock port reader icon.
  - Returning the credit card’s last four and card type information to the app for all transactions.

1.6.7
  What’s new:
  - iOS 10 compatibility fixes.
  - Audio jack swiper reliability fixes.
  - Bug fixes.

1.6.8
  What’s new:
  - Bug fix within the EMV card reader software update implementation, allowing seamless update experience.
  - NOTE : Please update to this new version of the SDK in order to have a successful software update experience with the EMV readers.
